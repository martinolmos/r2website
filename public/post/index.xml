<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on R2</title>
    <link>/post/</link>
    <description>Recent content in Posts on R2</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Análisis de Sentimientos de libros en Español con R</title>
      <link>/2019/07/03/an%C3%A1lisis-de-sentimientos-en-espa%C3%B1ol-con-r/</link>
      <pubDate>Wed, 03 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/07/03/an%C3%A1lisis-de-sentimientos-en-espa%C3%B1ol-con-r/</guid>
      <description>En este post voy a presentar una forma rápida y sencilla de hacer Análisis de Sentimientos en Español utilizando R y la librería syuzhet.
¿Para qué hacer éste tipo de análisis en libros? En este post Andrew Reagan de la Escuela de Información de Berkeley de la Universidad de California, retoma de Kurt Vonnegut la idea de que es posible cuantificar el arco emocional de las historias, y aplicó este análisis a 1.</description>
    </item>
    
    <item>
      <title>Utilizando CKAN para acceder a datos públicos</title>
      <link>/2019/06/17/utilizando-ckan-para-acceder-a-datos-publicos/</link>
      <pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/06/17/utilizando-ckan-para-acceder-a-datos-publicos/</guid>
      <description>Hace poco me enteré que el GCBA, el gobierno nacional y otros Estados y organizaciones publican sus datos públicos a través de una plataforma llamada CKAN a la que se puede acceder mediante una API y que existe una librería de R para esto.
Hay un buen tutorial de ROpenSci que voy a ir siguiendo para acceder a los datos publicados por el GCBA.
Primero cargo las librería “ckanr” y “tidyverse” (si no las tengo instaladas, las instalo con install.</description>
    </item>
    
    <item>
      <title>Análisis bibliométrico</title>
      <link>/2018/10/01/an%C3%A1lisis-bibliom%C3%A9trico/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/01/an%C3%A1lisis-bibliom%C3%A9trico/</guid>
      <description>Este post es una síntesis de una parte de un trabajo de consultoría consistente en un análisis bibliométrico de los trabajos publicados sobre la utilización de sensores remotos en aplicaciones ambientales. De acuerdo a la OCDE (Organisation for Economic Co-operation and Development 2006) la bibliometría es el análisis estadístico de publicaciones escritas. La aplicación de técnicas cuantitativas y estadísticas al análisis de publicaciones científicas y sus respectivas citas bibliográficas es muy utilizado en la actualidad para evaluar el crecimiento y la maduración de un campo científico, sus principales autores y redes de colaboración así como tendencias en la comunidad científica.</description>
    </item>
    
    <item>
      <title>Carrera de Ejecución Presupuestaria 2017</title>
      <link>/2018/06/07/carrera-de-ejecuci%C3%B3n-presupuestaria-2017/</link>
      <pubDate>Thu, 07 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/07/carrera-de-ejecuci%C3%B3n-presupuestaria-2017/</guid>
      <description>Estuve probando Flourish Studio con los datos de ejecución presupuestaria de la CABA de 2017.
Opté por un gráfico tipo &amp;lsquo;horse race&amp;rsquo; donde se puede observar como fue la ejecución de cada uno de los Ministros del GCBA a través de los distintos trimestres.

Referencias:
HDH - Ministra de Hábitat y Desarrollo Humano: Lic. Guadalupe Tagliaferri
AEP - Ministro de Ambiente y Espacio Público: Mg. Eduardo Macchiavelli
CUL - Ministro de Cultura: Ángel Mahler</description>
    </item>
    
    <item>
      <title>Explorando los datos de BA Taxi con Tableau</title>
      <link>/2018/05/23/analizando-los-datos-de-ba-taxi/</link>
      <pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/23/analizando-los-datos-de-ba-taxi/</guid>
      <description>Algunas preguntas exploratorias para hacerle a los datos de BA Taxi.
El dataset cuenta con 19.148 viajes que van desde el 1ro de mayo al 1ro de septiembre de 2017
Veamos primero cuántos viajes se realizaron en cada mes:
 Y cómo se distribuyen los viajes según día y horario:
 En el gráfico se ven claramente gran cantidad de viajes los viernes a la noche (madrugada del sábado) y sábado a la noche (madrugada del domingo) y los días de semana en las horas pico de la mañana (7, 8 y 9am).</description>
    </item>
    
    <item>
      <title>Distancia al subte</title>
      <link>/2018/01/15/distancia-al-subte/</link>
      <pubDate>Mon, 15 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/15/distancia-al-subte/</guid>
      <description>En este post me propongo explorar cuán lejos vivimos los porteños del subte. Una primer forma de analizar esto es tomando la distancia de cada manzana (hay aproximadamente unas 12 mil manzanas en la Ciudad de Buenos Aires) a la estación de subte más cercana.
Veamos primero la distribución de las distancias de cada manzana a la estación más cercana a través de un histograma.
Vemos que aproximadamente el 6% de los centros de manzana se encuentran a una distancia de menos de 200 metros y alrededor de 12% a una distancia de entre 200 y 400.</description>
    </item>
    
    <item>
      <title>Kilómetros construidos de subte en distintas ciudades</title>
      <link>/2017/11/02/kms-de-subte-en-ciudades/</link>
      <pubDate>Thu, 02 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/02/kms-de-subte-en-ciudades/</guid>
      <description>Breve tutorial sobre cómo hacer un gráfico interactivo de líneas con la plot.ly para R y Shiny comparando kilómetros construidos de Subte en Buenos Aires, Madrid, Sao Paulo y Santiago de Chile.Los datos utilizados son de citylines.co
# Carga las librerías a utilizarlibrary(shiny)library(plotly)# Lee los datos (que ya fueron previamente obtenidos y procesados)subte_comp &amp;lt;- read.csv(&amp;quot;subte_comp.csv&amp;quot;)# Define la interfaz de usuarioui &amp;lt;- fluidPage(# Define el títulotitlePanel(&amp;quot;Kilómetros constuidos de subte en distintas ciudades&amp;quot;),# Define el layout sidebarLayout(# Define el panel lateralsidebarPanel(# Define el checkbox para seleccionar las ciudadescheckboxGroupInput(&amp;quot;elegir_ciudades&amp;quot;, label = &amp;quot;Eligir ciudades&amp;quot;,choices = c(&amp;quot;Buenos Aires&amp;quot;,&amp;quot;Madrid&amp;quot;,&amp;quot;Sao Paulo&amp;quot;, &amp;quot;Santiago&amp;quot;))),# Define el panel principalmainPanel(plotlyOutput(&amp;quot;subtePlot&amp;quot;))))# Define la función que se va a implementar en el servidorserver &amp;lt;- function(input, output) {# &amp;#39;Escucha&amp;#39; las ciudades seleccionadas en el checkbox para subsetear los datossubte_data=reactive({return(subte_comp[subte_comp$Ciudad %in% input$elegir_ciudades,])})# Envía el plot en base a las ciudades seleccionadasoutput$subtePlot &amp;lt;- renderPlotly({# Define el gráfico de líneasplot_ly(data = subte_data(), x = ~Finalizacion, y = ~Value,color = ~Ciudad, type = &amp;quot;scatter&amp;quot;,mode = &amp;quot;lines&amp;quot;)})}# Corre la app shinyApp(ui = ui, server = server)</description>
    </item>
    
  </channel>
</rss>