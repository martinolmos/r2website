<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R2</title>
    <link>/</link>
    <description>Recent content on R2</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kilómetros construidos de subte en distintas ciudades</title>
      <link>/2017/11/02/kil%C3%B3metros-construidos-de-subte-en-distintas-ciudades/</link>
      <pubDate>Thu, 02 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/02/kil%C3%B3metros-construidos-de-subte-en-distintas-ciudades/</guid>
      <description>Gráfico interactivo de líneas simple con Plotly comparando kilómetros constuidos de Subte en distintas ciudades. Los datos utilizados son de citylines.com
library(shiny) library(plotly) library(dplyr) subte_comp &amp;lt;- read.csv(&amp;quot;subte_comp.csv&amp;quot;) # Define la interfaz de usuario ui &amp;lt;- fluidPage( # Define el título titlePanel(&amp;quot;Kilómetros constuidos de subte en distintas ciudades&amp;quot;), # Define el layout sidebarLayout( # Define el panel lateral sidebarPanel( # Define el checkbox para seleccionar las ciudades checkboxGroupInput(&amp;quot;elegir_ciudades&amp;quot;, label = &amp;quot;Eligir ciudades&amp;quot;, choices = c(&amp;quot;Buenos Aires&amp;quot;, &amp;quot;Madrid&amp;quot;, &amp;quot;Sao Paulo&amp;quot;, &amp;quot;Santiago&amp;quot;))), # Define el panel principal mainPanel( plotlyOutput(&amp;quot;subtePlot&amp;quot;) ) ) ) # Define server logic required to draw a histogram server &amp;lt;- function(input, output) { # &amp;#39;Escucha&amp;#39; las ciudades seleccionadas en el checkbox para subsetear los datos subte_data=reactive({ return(subte_comp[subte_comp$Ciudad %in% input$elegir_ciudades,]) }) output$subtePlot &amp;lt;- renderPlotly({ # Define el gráfico de líneas plot_ly(data = subte_data(), x = ~Finalizacion, y = ~Value, color = ~Ciudad, type = &amp;quot;scatter&amp;quot;, mode = &amp;quot;lines&amp;quot;) }) } # Corre la app shinyApp(ui = ui, server = server) Shiny applications not supported in static R Markdown documents  </description>
    </item>
    
    <item>
      <title>Kilómetros constuidos de subte en distintas ciudades</title>
      <link>/2017/11/01/kil%C3%B3metros-constuidos-de-subte-en-distintas-ciudades/</link>
      <pubDate>Wed, 01 Nov 2017 15:20:51 -0300</pubDate>
      
      <guid>/2017/11/01/kil%C3%B3metros-constuidos-de-subte-en-distintas-ciudades/</guid>
      <description>Gráfico interactivo de líneas simple con Plotly comparando kilómetros constuidos de Subte en distintas ciudades. Los datos utilizados son de citylines.com
library(shiny)library(plotly)library(dplyr)subte_comp &amp;lt;- read.csv(&amp;quot;subte_comp.csv&amp;quot;)# Define la interfaz de usuarioui &amp;lt;- fluidPage(# Define el títulotitlePanel(&amp;quot;Kilómetros constuidos de subte en distintas ciudades&amp;quot;),# Define el layout sidebarLayout(# Define el panel lateralsidebarPanel(# Define el checkbox para seleccionar las ciudadescheckboxGroupInput(&amp;quot;elegir_ciudades&amp;quot;, label = &amp;quot;Eligir ciudades&amp;quot;,choices = c(&amp;quot;Buenos Aires&amp;quot;,&amp;quot;Madrid&amp;quot;,&amp;quot;Sao Paulo&amp;quot;, &amp;quot;Santiago&amp;quot;))),# Define el panel principalmainPanel(plotlyOutput(&amp;quot;subtePlot&amp;quot;))))# Define server logic required to draw a histogramserver &amp;lt;- function(input, output) {# &amp;#39;Escucha&amp;#39; las ciudades seleccionadas en el checkbox para subsetear los datossubte_data=reactive({return(subte_comp[subte_comp$Ciudad %in% input$elegir_ciudades,])})output$subtePlot &amp;lt;- renderPlotly({# Define el gráfico de líneasplot_ly(data = subte_data(), x = ~Finalizacion, y = ~Value,color = ~Ciudad, type = &amp;quot;scatter&amp;quot;,mode = &amp;quot;lines&amp;quot;)})}# Corre la app shinyApp(ui = ui, server = server)Shiny applications not supported in static R Markdown documents</description>
    </item>
    
    <item>
      <title>Mapeando estacionamientos (no construidos)</title>
      <link>/2017/10/31/mapeando-estacionamientos-no-construidos/</link>
      <pubDate>Tue, 31 Oct 2017 21:48:51 -0700</pubDate>
      
      <guid>/2017/10/31/mapeando-estacionamientos-no-construidos/</guid>
      <description>Aquí voy a compartir el código para la visualización que acompañó éste artículo de Juan Pablo Pilatti, del Instituto iCiudad donde utilizamos Shiny y Leaflet para hacer un mapa interactivo de los estacionamientos aprobados por la Legislatura pero nunca construidos por el Ejecutivo.
library(shiny)library(leaflet)library(sp)library(sf)library(rgdal)# Define la interfaz de usuarioui &amp;lt;- shinyUI(# fluidPage es un layout común de ShinyfluidPage(# Título principaltitlePanel(&amp;quot;Estacionamientos Aprobados por Ley&amp;quot;),# Situa el mapa de leaflet en el panel principalmainPanel(leafletOutput(&amp;quot;map&amp;quot;, width = 800, height = 800))))# Define la función en el servidorserver &amp;lt;- function(input, output) {# Descarga los datosestac_sf &amp;lt;- read.</description>
    </item>
    
    <item>
      <title>A Plain Markdown Post</title>
      <link>/2016/12/30/a-plain-markdown-post/</link>
      <pubDate>Fri, 30 Dec 2016 21:49:57 -0700</pubDate>
      
      <guid>/2016/12/30/a-plain-markdown-post/</guid>
      <description>This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:
 You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc.  There are many differences in syntax between Blackfriday&amp;rsquo;s Markdown and Pandoc&amp;rsquo;s Markdown.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      
      <guid>/about/</guid>
      <description>R2 es un sitio de datos, política/s y otras yerbas.
Martín Olmos es Licenciado en Ciencias Políticas de la Universidad Católica Argentina (2004) y Magister en Políticas Públicas de la George Washington University (2016). Ha sido distinguido con las becas Fulbright (2015-2016), Organización de Estados Americanos (2016) y la Global Leaders Fellowship (2015-2016) de la Universidad George Washington. Antes de emprender sus estudios de posgrado en el exterior se desempeñó como Jefe Regional de Ciudad de Buenos Aires en ANSES (2009-2014).</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/2015/07/23/hello-r-markdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/2015/07/23/hello-r-markdown/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars)## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>Lorem Ipsum</title>
      <link>/2015/01/01/lorem-ipsum/</link>
      <pubDate>Thu, 01 Jan 2015 13:09:13 -0600</pubDate>
      
      <guid>/2015/01/01/lorem-ipsum/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description>
    </item>
    
  </channel>
</rss>