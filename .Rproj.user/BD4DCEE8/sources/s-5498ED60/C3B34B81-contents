library(shiny)
library(leaflet)
library(sp)
library(sf)
library(rgdal)


ui <- shinyUI(fluidPage(
        
        titlePanel("Estacionamientos Aprobados por Ley"),
        mainPanel(leafletOutput("map", width = 800, height = 600))
        
))

# Define server logic required to draw a histogram
server <- function(input, output) {
   
        options(shiny.sanitize.errors = FALSE)
        estac_sf <- read.csv("https://github.com/martinolmos/estacionamientos/raw/master/estac_sf.csv")
        estac_sp <- SpatialPointsDataFrame(coords = estac_sf[,1:2], 
                                           data = estac_sf,
                                           proj4string = CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"))
        icons <- awesomeIcons(
                icon = 'ios-close-circled',
                iconColor = 'black',
                library = 'ion',
                markerColor = ifelse(estac_sp@data$const == 'NO', 'red', 'green'))
        
        output$map <- renderLeaflet({
                
                leaflet() %>% 
                        addTiles() %>%
                        fitBounds(lat1 = -34.69029, 
                                  lng1 = -58.48664, 
                                  lat2 = -34.55579, 
                                  lng2 = -58.3694) %>%
                        
                        addLegend(position = "topleft", 
                                  title = "Estacionamiento Construido",
                                  pal = colorFactor(palette = c('red', 'green'), 
                                                    levels = levels(as.factor(estac_sf$const))), 
                                  values = c("NO", "SI")) %>%
                        addAwesomeMarkers(data = estac_sp, 
                                          icon = icons, 
                                          label = ~nombre,
                                          popup = ~norma)

                        })
}

# Run the application 
shinyApp(ui = ui, server = server)

